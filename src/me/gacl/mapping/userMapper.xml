<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.gacl.mapping.userMapper">

    <select id="select_userID_and_userPWD" resultType="me.gacl.domain.User">
        select * from userinf where userID=#{userID} and userPWD=#{userPWD}
    </select>
    
    <select id="select_ALL_serverIP" resultType="me.gacl.domain.server">
        select serverIP from HWSERVER 
    </select>
    
    <select id="select_profname" parameterType="String" resultType="me.gacl.domain.profComparison">
        select profname from profComparison  where appName=#{appName}
    </select>
    
     <insert id="add_inworknodes" parameterType="me.gacl.domain.inWorkNodes">
        insert into inWorkNodes(nodeID,nodeManage,nodeCreTime,nodeState,nodeName) values(#{nodeID},#{nodeManage},#{nodeCreTime},#{nodeState},#{nodeName})
    </insert>         
               
    <select id="select_nodeID_and_nodeManage" resultType="me.gacl.domain.inWorkNodes">
        select * from inWorkNodes where nodeID=#{nodeID} and nodeManage=#{nodeManage}
    </select>
            
            
    <delete id="delete_inworknodes" parameterType="String">
         delete from inWorkNodes where nodeID=#{nodeID}
    </delete>
         
     <insert id="add_inWorkGateways" parameterType="me.gacl.domain.inWorkGateways">
        insert into inWorkGateways(gatewayID,gatewayManage,gatewayCreTime,gatewayState) values(#{gatewayID},#{gatewayManage},#{gatewayCreTime},#{gatewayState})
    </insert> 
    
    <delete id="delete_inWorkGateways" parameterType="String">
         delete from inWorkGateways where gatewayID=#{gatewayID}
    </delete>
    
    <select id="select_nodeID" parameterType="String" resultType="me.gacl.domain.inWorkNodes">
         select * from inWorkNodes where nodeID=#{nodeID}
    </select>

    <select id="select_gatewayID" parameterType="String" resultType="me.gacl.domain.inWorkGateways">
         select * from inWorkGateways where gatewayID=#{gatewayID}
    </select>

    <select id="select_gatewayID_and_gatewayManage" parameterType="String" resultType="me.gacl.domain.inWorkGateways">
         select * from inWorkGateways where gatewayID=#{gatewayID} and gatewayManage=#{gatewayManage}
    </select>
        
    <update id="up_lastServer_and_lastTime" parameterType="me.gacl.domain.inWorkNodes">
        update inWorkNodes set lastServer=#{lastServer},lastTime=#{lastTime} where nodeID=#{nodeID} 
    </update>
    
    <select id="select_lastServer" parameterType="String" resultType="me.gacl.domain.inWorkNodes">
         select lastServer from inWorkNodes where nodeID=#{nodeID} 
    </select>

    <select id="select_userAPIKey_and_tokenCreTime" parameterType="String" resultType="me.gacl.domain.User">
         select userAPIKey,tokenCreTime from userinf where userID=#{userID} 
    </select>

    <select id="select_accCreTime_and_effectiveTime" resultType="me.gacl.domain.authToken">
         select accCreTime,effectiveTime from authToken where client_ID=#{client_ID} and APIKey=#{APIKey} order by accCreTime desc limit 1
    </select>
    
         <insert id="add_authToken" parameterType="me.gacl.domain.authToken">
        insert into authToken(userID,APIKey,client_ID,accessToken,tokenState,accCreTime,effectiveTime) values(#{userID},#{APIKey},#{client_ID},#{accessToken},#{tokenState},#{accCreTime},#{effectiveTime})
    </insert> 
    
        <select id="select_accCreTime_and_effectiveTime_1" resultType="me.gacl.domain.authToken">
         select accCreTime,effectiveTime from authToken where client_ID=#{client_ID} and userID=#{userID} and accessToken=#{accessToken}
    </select>
    
      <update id="up_userAPIKey_and_tokenCreTime" parameterType="me.gacl.domain.User">
        update userinf set userAPIKey=#{userAPIKey} , tokenCreTime=#{tokenCreTime} where userID=#{userID} 
    </update>
            
    <select id="select_ALL_TotalCount" resultType="me.gacl.domain.TotalCount">
         select * from TotalCount
    </select>
        
    <select id="select_Time_for_DayCount" resultType="me.gacl.domain.DayCount">
         select Time from DayCount
    </select>
    
    <select id="select_Smoke_Temperature_Humidity_Parklot_Safety" resultType="me.gacl.domain.DayCount">
         select Smoke,Temperature,Humidity,Parklot,Safety from DayCount
    </select>
    
    <update id="up_DayDataCount" parameterType="String">
        update TotalCount set TotalDataCount= #{TotalDataCount} ,DayDataCount='0'
    </update>
    
    <update id="up_DayCount" parameterType="me.gacl.domain.DayCount"> 
        update DayCount set Smoke=#{Smoke} , Temperature=#{Temperature} , Humidity=#{Humidity} , Parklot=#{Parklot} , 
        Safety =#{Safety} , Time=#{Time}
    </update>

    <update id="up_DayCount_2" parameterType="me.gacl.domain.DayCount"> 
        update DayCount set Smoke=#{Smoke} , Temperature=#{Temperature} , Humidity=#{Humidity} , Parklot=#{Parklot} , 
        Safety =#{Safety}
    </update>    
       
    <update id="up_DayDataCount_for_DayDataCount" parameterType="String">
        update TotalCount set DayDataCount=#{DayDataCount}
    </update>
    
    <select id="select_all_for_DayHistory" parameterType="String" resultType="me.gacl.domain.DayHistory">
         select * from DayHistory where time like #{time}
    </select>
    
</mapper>